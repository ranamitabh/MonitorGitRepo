import base64
import requests


def scrape_github_repositories(username):
    url=f"https://api.github.com/users/{username}/repos"
    response=requests.get(url)

    if response.status_code==200:
        repositories=response.json()
        return repositories
    else:
        print(f"Error: Unable to fetch repositories. Status code: {response.status_code}")
        return []


def get_gitignore_content(repo_name, owner):
    url=f"https://api.github.com/repos/{owner}/{repo_name}/contents/.gitignore"
    response=requests.get(url)

    if response.status_code==200:
        content=response.json()["content"]
        return content
    else:
        print(f"Error: Unable to fetch .gitignore. Status code: {response.status_code}")
        return None

def is_string_present_or_commented_out(gitignore_content, scan):
    lines = gitignore_content.splitlines()

    for line in lines:
        if not line.strip().startswith("#") and scan in line:
            return True

    return False

if __name__=="__main__":
    github_username="ranamitabh"
    repositories=scrape_github_repositories(github_username)

    for repo in repositories:
        repo_name=repo["name"]
        owner=repo["owner"]["login"]
        print(f"Repository: {repo_name}")
        gitignore_content=get_gitignore_content(repo_name, owner)

        if gitignore_content:
            gitignore_content=base64.b64decode(gitignore_content).decode("utf-8")
            print(f"\n.gitignore Content:")
            print(gitignore_content)

            isCheckmarxPresent = is_string_present_or_commented_out(gitignore_content, "checkmarx")
            isSonarPresent = is_string_present_or_commented_out(gitignore_content, "sonar")
            isOSSPresent = is_string_present_or_commented_out(gitignore_content, "oss")
            isSonatypePresent = is_string_present_or_commented_out(gitignore_content, "sonatype")

            if(isCheckmarxPresent):
                print("CheckMarx scan is not enabled")
            if (isSonarPresent):
                print("Sonar scan is not enabled")
            if (isOSSPresent):
                print("OSS scan is not enabled")
            if (isSonatypePresent):
                print("Sonatype scan is not enabled")

        else:
            print("\n.gitignore not found.")

        print("------------------------")
